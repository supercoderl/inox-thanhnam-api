// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace InoxThanhNamServer.Models;

public partial class InoxEcommerceContext : DbContext
{
    public InoxEcommerceContext(DbContextOptions<InoxEcommerceContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Contact> Contacts { get; set; }

    public virtual DbSet<Discount> Discounts { get; set; }

    public virtual DbSet<District> Districts { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderItem> OrderItems { get; set; }

    public virtual DbSet<PaymentDetail> PaymentDetails { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductImage> ProductImages { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Token> Tokens { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserAddress> UserAddresses { get; set; }

    public virtual DbSet<UserRole> UserRoles { get; set; }

    public virtual DbSet<Ward> Wards { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.CategoryID).HasName("PK__Category__19093A2BF59F8BD4");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.CityID).HasName("PK__City__F2D21A96EF426485");
        });

        modelBuilder.Entity<Contact>(entity =>
        {
            entity.HasKey(e => e.ContactID).HasName("PK__tmp_ms_x__5C6625BBEF66FBC0");
        });

        modelBuilder.Entity<Discount>(entity =>
        {
            entity.HasKey(e => e.DiscountID).HasName("PK__Discount__E43F6DF685B5BD59");
        });

        modelBuilder.Entity<District>(entity =>
        {
            entity.HasKey(e => e.DistrictID).HasName("PK__District__85FDA4A633A0F741");

            entity.HasOne(d => d.City).WithMany(p => p.Districts).HasConstraintName("District_fk0");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderID).HasName("PK__tmp_ms_x__C3905BAFC1D1B0D8");

            entity.HasOne(d => d.User).WithMany(p => p.Orders).HasConstraintName("Order_fk0");
        });

        modelBuilder.Entity<OrderItem>(entity =>
        {
            entity.HasKey(e => e.OrderItemID).HasName("PK__OrderIte__57ED06A1578D5D7B");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderItems).HasConstraintName("OrderItem_fk0");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderItems).HasConstraintName("OrderItem_fk1");
        });

        modelBuilder.Entity<PaymentDetail>(entity =>
        {
            entity.HasKey(e => e.PaymentID).HasName("PK__PaymentD__9B556A58ADAF92AC");

            entity.HasOne(d => d.Order).WithMany(p => p.PaymentDetails).HasConstraintName("PaymentDetails_fk0");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductID).HasName("PK__tmp_ms_x__B40CC6EDBA5A8BCD");

            entity.HasOne(d => d.Category).WithMany(p => p.Products).HasConstraintName("Product_fk0");

            entity.HasOne(d => d.Discount).WithMany(p => p.Products).HasConstraintName("Product_fk2");
        });

        modelBuilder.Entity<ProductImage>(entity =>
        {
            entity.HasKey(e => e.ImageID).HasName("PK__ProductI__7516F4EC28C7CCC5");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductImages).HasConstraintName("FK_ProductImage_Product");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleID).HasName("PK__Role__8AFACE3AB30E36FE");
        });

        modelBuilder.Entity<Token>(entity =>
        {
            entity.HasKey(e => e.TokenID).HasName("PK__tmp_ms_x__658FEE8ABD1777CE");

            entity.HasOne(d => d.User).WithMany(p => p.Tokens).HasConstraintName("FK_Token_Users");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__tmp_ms_x__1788CCAC54AE0398");

            entity.Property(e => e.UserID).ValueGeneratedNever();
        });

        modelBuilder.Entity<UserAddress>(entity =>
        {
            entity.HasKey(e => e.AddressID).HasName("PK__tmp_ms_x__091C2A1BB3B28120");

            entity.HasOne(d => d.City).WithMany(p => p.UserAddresses).HasConstraintName("UserAddress_fk1");

            entity.HasOne(d => d.District).WithMany(p => p.UserAddresses).HasConstraintName("UserAddress_fk2");

            entity.HasOne(d => d.User).WithMany(p => p.UserAddresses).HasConstraintName("UserAddress_fk0");

            entity.HasOne(d => d.Ward).WithMany(p => p.UserAddresses).HasConstraintName("UserAddress_fk3");
        });

        modelBuilder.Entity<UserRole>(entity =>
        {
            entity.HasKey(e => e.UserRoleID).HasName("PK__UserRole__3D978A55BCBAA39E");

            entity.HasOne(d => d.Role).WithMany(p => p.UserRoles).HasConstraintName("UserRole_fk1");

            entity.HasOne(d => d.User).WithMany(p => p.UserRoles).HasConstraintName("UserRole_fk0");
        });

        modelBuilder.Entity<Ward>(entity =>
        {
            entity.HasKey(e => e.WardID).HasName("PK__Ward__C6BD9BEAFC6F13BD");

            entity.HasOne(d => d.District).WithMany(p => p.Wards).HasConstraintName("Ward_fk0");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}